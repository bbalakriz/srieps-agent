playbook_repos:
  custom_actions:
    url: "file:///etc/robusta/playbooks/custom_playbooks"
    pip_install: False

sinks_config:
- slack_sink:
    api_key: 
    disable_holmes_note: true
    name: main_slack_sink
    slack_channel: sreips-helper

global_config:
  cluster_name: openshift-prod
  account_id: ""
  check_prometheus_flags: true
  clusterName: openshift-prod
  custom_annotations: []
  custom_severity_map: {}
  grafana_api_key: ""
  grafana_dashboard_uid: ""
  grafana_url: ""
  prometheus_url: ""
  signing_key: ""

alert_relabel:
  []

light_actions:
  - related_pods
  - prometheus_enricher
  - add_silence
  - delete_pod
  - delete_silence
  - get_silences
  - logs_enricher
  - pod_events_enricher
  - deployment_events_enricher
  - job_events_enricher
  - job_pod_enricher
  - get_resource_yaml
  - node_cpu_enricher
  - node_disk_analyzer
  - node_running_pods_enricher
  - node_allocatable_resources_enricher
  - node_status_enricher
  - node_graph_enricher
  - oomkilled_container_graph_enricher
  - pod_oom_killer_enricher
  - oom_killer_enricher
  - volume_analysis
  - python_profiler
  - pod_ps
  - python_memory
  - debugger_stack_trace
  - python_process_inspector
  - prometheus_alert
  - alertmanager_alert
  - create_pvc_snapshot
  - resource_events_enricher
  - delete_job
  - list_resource_names
  - node_dmesg_enricher
  - status_enricher
  - krr_scan
  - popeye_scan
  - handle_alertmanager_event
  - drain
  - cordon
  - uncordon
  - rollout_restart
  - ask_holmes
  - prometheus_all_available_metrics
  - prometheus_get_series
  - prometheus_get_label_names
  - holmes_workload_health
  - holmes_conversation
  - holmes_issue_chat
  - holmes_chat
  - holmes_workload_chat
  - list_pods

active_playbooks:
  - actions:
    - name_silencer:
        names:
        - Watchdog
        - KubeSchedulerDown
        - KubeControllerManagerDown
        - InfoInhibitor
    name: CommonPrometheusAlertsSilencer
    triggers:
    - on_prometheus_alert:
        status: all
  - actions:
    - name_silencer:
        names:
        - etcdInsufficientMembers
        - etcdMembersDown
        - NodeClockNotSynchronising
        - PrometheusTSDBCompactionsFailing
    name: MiniClustersPrometheusAlertsSilencer
    triggers:
    - on_prometheus_alert:
        k8s_providers:
        - Minikube
        - Kind
        - RancherDesktop
        status: all
  - actions:
    - name_silencer:
        names:
        - KubeletDown
    name: GKEProviderAlertsAlertsSilencer
    triggers:
    - on_prometheus_alert:
        k8s_providers:
        - GKE
        status: all
  - actions:
    - silence_alert:
        log_silence: true
    name: DONodeAgentCPUThrottlingHighAlertSilencer
    triggers:
    - on_prometheus_alert:
        alert_name: CPUThrottlingHigh
        k8s_providers:
        - DigitalOcean
        pod_name_prefix: do-node-agent
  - actions:
    - target_down_dns_silencer: {}
    name: TargetDownSilencer
    triggers:
    - on_prometheus_alert:
        alert_name: TargetDown
  - actions:
    - lls_agent_action: {} # bala: from custom action sreips-action.py
    - pod_events_enricher: {}
    triggers:
    - on_pod_update:
        namespace_prefix: "sreips-test"
  - actions:
    - default_enricher: {} # bala: added default enricher 
    triggers:
    - on_prometheus_alert: {}
  - actions:
    - report_crash_loop: {}
    - lls_agent_action: {} # bala: from custom action sreips-action.py
    name: CrashLoopBackOff
    triggers:
    - on_pod_crash_loop:
        restart_reason: CrashLoopBackOff
  - actions:
    - image_pull_backoff_reporter: {}
    - lls_agent_action: {} # bala: from custom action sreips-action.py
    name: ImagePullBackOff
    triggers:
    - on_image_pull_backoff: {}
  - actions:
    - pod_evicted_enricher: {}
    - pod_events_enricher: {}
    - enrich_pod_with_node_events: {}
    name: PodEvicted
    triggers:
    - on_pod_evicted: {}
  - actions:
    - fail_krr_scan: {}
    name: KrrJobFailed
    triggers:
    - on_job_failure:
        scope:
          include:
          - labels:
            - app=krr.robusta.dev
  - actions:
    - pod_oom_killer_enricher:
        attach_logs: true
        container_memory_graph: true
        dmesg_log: false
        node_memory_graph: true
    - lls_agent_action: {} # bala: from custom action sreips-action.py
    name: PodOOMKill
    stop: true
    triggers:
    - on_pod_oom_killed:
        rate_limit: 3600
  - actions:
    - lls_agent_event_action: {} # bala: from custom action sreips-action.py
    name: PersistentVolumeClaimNotBound
    triggers:
      - on_kubernetes_warning_event_create:
          include:
            - ProvisioningFailed
            - FailedMount
            - FailedAttachVolume
            - FailedScheduling
          rate_limit: 3600
  - actions:
    - logs_enricher: {}
    - pod_events_enricher: {}
    name: KubePodCrashLooping
    triggers:
    - on_prometheus_alert:
        alert_name: KubePodCrashLooping
  - actions:
    - prometheus_rules_enricher: {}
    - logs_enricher:
        filter_regex: .*Evaluating rule failed.*
    name: PrometheusRuleFailures
    triggers:
    - on_prometheus_alert:
        alert_name: PrometheusRuleFailures
  - actions:
    - cpu_overcommited_enricher: {}
    - external_video_enricher:
        name: CPU Overcommited
        url: https://bit.ly/overcommit-cpu
    name: KubeCPUOvercommit
    triggers:
    - on_prometheus_alert:
        alert_name: KubeCPUOvercommit
  - actions:
    - memory_overcommited_enricher: {}
    - external_video_enricher:
        name: Memory Overcommited
        url: https://bit.ly/memory-overcommit
    name: KubeMemoryOvercommit
    triggers:
    - on_prometheus_alert:
        alert_name: KubeMemoryOvercommit
  - actions:
    - logs_enricher: {}
    - pod_events_enricher: {}
    - pod_issue_investigator: {}
    name: KubePodNotReady
    triggers:
    - on_prometheus_alert:
        alert_name: KubePodNotReady
  - actions:
    - pod_issue_investigator: {}
    - pod_events_enricher: {}
    name: KubeContainerWaiting
    triggers:
    - on_prometheus_alert:
        alert_name: KubeContainerWaiting
  - actions:
    - hpa_mismatch_enricher: {}
    name: KubeHpaReplicasMismatch
    triggers:
    - on_prometheus_alert:
        alert_name: KubeHpaReplicasMismatch
  - actions:
    - job_info_enricher: {}
    - job_events_enricher: {}
    - job_pod_enricher: {}
    name: KubeJobAlerts
    triggers:
    - on_prometheus_alert:
        alert_name: KubeJobFailed
    - on_prometheus_alert:
        alert_name: KubeJobCompletion
    - on_prometheus_alert:
        alert_name: KubeJobNotCompleted
  - actions:
    - api_service_status_enricher: {}
    name: KubeAggregatedAPIDown
    triggers:
    - on_prometheus_alert:
        alert_name: KubeAggregatedAPIDown
  - actions:
    - node_pods_capacity_enricher: {}
    - alert_explanation_enricher:
        alert_explanation: The node is approaching the maximum number of scheduled pods.
        recommended_resolution: Verify that you defined proper resource requests for
          your workloads. If pods cannot be scheduled, add more nodes to your cluster.
    name: KubeletTooManyPods
    triggers:
    - on_prometheus_alert:
        alert_name: KubeletTooManyPods
  - actions:
    - node_allocatable_resources_enricher: {}
    - node_running_pods_enricher: {}
    - status_enricher:
        show_details: true
    name: KubeNodeNotReady
    triggers:
    - on_prometheus_alert:
        alert_name: KubeNodeNotReady
  - actions:
    - resource_events_enricher: {}
    - node_status_enricher: {}
    name: KubeNodeUnreachable
    triggers:
    - on_prometheus_alert:
        alert_name: KubeNodeUnreachable
  - actions:
    - resource_events_enricher:
        dependent_pod_mode: true
    - statefulset_replicas_enricher: {}
    - pod_issue_investigator: {}
    name: KubeStatefulSetReplicasMismatch
    triggers:
    - on_prometheus_alert:
        alert_name: KubeStatefulSetReplicasMismatch
  - actions:
    - related_pods: {}
    - statefulset_replicas_enricher: {}
    name: KubeStatefulSetUpdateNotRolledOut
    triggers:
    - on_prometheus_alert:
        alert_name: KubeStatefulSetUpdateNotRolledOut
  - actions:
    - resource_events_enricher: {}
    - related_pods: {}
    - daemonset_status_enricher: {}
    name: KubeDaemonSetRolloutStuck
    triggers:
    - on_prometheus_alert:
        alert_name: KubeDaemonSetRolloutStuck
  - actions:
    - daemonset_status_enricher: {}
    - daemonset_misscheduled_analysis_enricher: {}
    name: K8sMisscheduled
    triggers:
    - on_prometheus_alert:
        alert_name: KubernetesDaemonsetMisscheduled
    - on_prometheus_alert:
        alert_name: KubeDaemonSetMisScheduled
  - actions:
    - node_cpu_enricher: {}
    - alert_graph_enricher:
        item_type: Node
        resource_type: CPU
    name: HostHighCpuLoad
    triggers:
    - on_prometheus_alert:
        alert_name: HostHighCpuLoad
  - actions:
    - oom_killer_enricher: {}
    - alert_graph_enricher:
        item_type: Node
        resource_type: Memory
    name: HostOomKillDetected
    triggers:
    - on_prometheus_alert:
        alert_name: HostOomKillDetected
  - actions:
    - node_disk_analyzer: {}
    - alert_graph_enricher:
        item_type: Node
        resource_type: Disk
    name: NodeFSSpaceAlerts
    triggers:
    - on_prometheus_alert:
        alert_name: NodeFilesystemSpaceFillingUp
    - on_prometheus_alert:
        alert_name: NodeFilesystemAlmostOutOfSpace
  - actions:
    - cpu_throttling_analysis_enricher: {}
    - alert_graph_enricher:
        item_type: Pod
        resource_type: CPU
    name: CPUThrottlingHigh
    triggers:
    - on_prometheus_alert:
        alert_name: CPUThrottlingHigh
        status: all
  - actions:
    - pod_issue_investigator: {}
    - deployment_events_enricher:
        included_types:
        - Warning
    - deployment_events_enricher:
        dependent_pod_mode: true
        included_types:
        - Warning
        - Normal
    name: DeploymentReplicasMismatch
    triggers:
    - on_prometheus_alert:
        alert_name: KubernetesDeploymentReplicasMismatch
    - on_prometheus_alert:
        alert_name: KubeDeploymentReplicasMismatch
  - actions:
    - version_mismatch_enricher: {}
    name: KubeVersionMismatch
    triggers:
    - on_prometheus_alert:
        alert_name: KubeVersionMismatch
  - actions:
    - default_enricher: {}
    name: DefaultPrometheusAlertEnricher
    triggers:
    - on_prometheus_alert:
        status: all
  - actions:
    - alert_explanation_enricher:
        alert_explanation: This alert is fired when the file system is running out of
          space.
        recommended_resolution: This is a common issue on local clusters and we recommend
          increasing the node disk size for your cluster to run optimally.
    name: MiniClusterNodeFSSpaceAlerts
    triggers:
    - on_prometheus_alert:
        alert_name: NodeFilesystemSpaceFillingUp
        k8s_providers:
        - Minikube
        - Kind
        - RancherDesktop
    - on_prometheus_alert:
        alert_name: NodeFilesystemAlmostOutOfSpace
        k8s_providers:
        - Minikube
        - Kind
        - RancherDesktop